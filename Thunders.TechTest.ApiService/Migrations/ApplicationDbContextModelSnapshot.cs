// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thunders.TechTest.ApiService.Repository;

#nullable disable

namespace Thunders.TechTest.ApiService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Thunders.TechTest.ApiService.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities", (string)null);
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Entities.RegisterUse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int>("TollStationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UsedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("StateId");

                    b.HasIndex("TollStationId");

                    b.ToTable("RegistersUse", (string)null);
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("States", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Acre",
                            Uf = "AC"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Alagoas",
                            Uf = "AL"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Amapá",
                            Uf = "AP"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Amazonas",
                            Uf = "AM"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bahia",
                            Uf = "BA"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ceará",
                            Uf = "CE"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Distrito Federal",
                            Uf = "DF"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Espírito Santo",
                            Uf = "ES"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Goiás",
                            Uf = "GO"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Maranhão",
                            Uf = "MA"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Mato Grosso",
                            Uf = "MT"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Mato Grosso do Sul",
                            Uf = "MS"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Minas Gerais",
                            Uf = "MG"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Pará",
                            Uf = "PA"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Paraíba",
                            Uf = "PB"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Paraná",
                            Uf = "PR"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Pernambuco",
                            Uf = "PE"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Piauí",
                            Uf = "PI"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Rio de Janeiro",
                            Uf = "RJ"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Rio Grande do Norte",
                            Uf = "RN"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Rio Grande do Sul",
                            Uf = "RS"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Rondônia",
                            Uf = "RO"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Roraima",
                            Uf = "RR"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Santa Catarina",
                            Uf = "SC"
                        },
                        new
                        {
                            Id = 25,
                            Name = "São Paulo",
                            Uf = "SP"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Sergipe",
                            Uf = "SE"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Tocantins",
                            Uf = "TO"
                        });
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Entities.TollStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("TollStations", (string)null);
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Entities.City", b =>
                {
                    b.HasOne("Thunders.TechTest.ApiService.Entities.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Entities.RegisterUse", b =>
                {
                    b.HasOne("Thunders.TechTest.ApiService.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Thunders.TechTest.ApiService.Entities.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Thunders.TechTest.ApiService.Entities.TollStation", "TollStation")
                        .WithMany()
                        .HasForeignKey("TollStationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("State");

                    b.Navigation("TollStation");
                });

            modelBuilder.Entity("Thunders.TechTest.ApiService.Entities.TollStation", b =>
                {
                    b.HasOne("Thunders.TechTest.ApiService.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
